{
  "summary": {
    "totalTests": 27,
    "successfulTests": 5,
    "failedTests": 22,
    "successRate": 18.52,
    "timestamp": "2025-07-09T21:02:42.698Z"
  },
  "results": [
    {
      "endpoint": "/api/auth/register",
      "method": "POST",
      "status": "success",
      "statusCode": 201,
      "duration": 1650,
      "data": {
        "user": {
          "id": "cmcwg3j65000ju76luagm2wwi",
          "email": "Macey.Spinka-Ankunding@yahoo.com",
          "firstName": "Minnie",
          "lastName": "Satterfield",
          "role": "OWNER"
        },
        "tenant": {
          "id": "cmcwg3j1z000hu76lh2lamnfw",
          "name": "Minnie Satterfield",
          "subdomain": "nicolas-thiel"
        },
        "expiresIn": 900
      }
    },
    {
      "endpoint": "/api/auth/login",
      "method": "POST",
      "status": "success",
      "statusCode": 200,
      "duration": 1953,
      "data": {
        "user": {
          "id": "cmcwg3j65000ju76luagm2wwi",
          "email": "Macey.Spinka-Ankunding@yahoo.com",
          "firstName": "Minnie",
          "lastName": "Satterfield",
          "role": "OWNER"
        },
        "tenant": {
          "id": "cmcwg3j1z000hu76lh2lamnfw",
          "name": "Minnie Satterfield",
          "subdomain": "nicolas-thiel"
        },
        "expiresIn": 900
      }
    },
    {
      "endpoint": "/api/auth/me",
      "method": "GET",
      "status": "success",
      "statusCode": 200,
      "duration": 524,
      "data": {
        "id": "cmcwg3j65000ju76luagm2wwi",
        "email": "Macey.Spinka-Ankunding@yahoo.com",
        "firstName": "Minnie",
        "lastName": "Satterfield",
        "role": "OWNER",
        "tenant": {
          "id": "cmcwg3j1z000hu76lh2lamnfw",
          "name": "Minnie Satterfield",
          "subdomain": "nicolas-thiel",
          "customDomain": null
        }
      }
    },
    {
      "endpoint": "/api/auth/refresh",
      "method": "POST",
      "status": "failed",
      "statusCode": 401,
      "duration": 683,
      "data": {
        "error": "Invalid refresh token"
      },
      "error": "Invalid refresh token"
    },
    {
      "endpoint": "/api/auth/logout",
      "method": "POST",
      "status": "success",
      "statusCode": 200,
      "duration": 745,
      "data": {
        "message": "Logged out successfully"
      }
    },
    {
      "endpoint": "/api/auth/login",
      "method": "POST",
      "status": "success",
      "statusCode": 200,
      "duration": 1901,
      "data": {
        "user": {
          "id": "cmcwg3j65000ju76luagm2wwi",
          "email": "Macey.Spinka-Ankunding@yahoo.com",
          "firstName": "Minnie",
          "lastName": "Satterfield",
          "role": "OWNER"
        },
        "tenant": {
          "id": "cmcwg3j1z000hu76lh2lamnfw",
          "name": "Minnie Satterfield",
          "subdomain": "nicolas-thiel"
        },
        "expiresIn": 900
      }
    },
    {
      "endpoint": "/api/properties",
      "method": "POST",
      "status": "failed",
      "statusCode": 500,
      "duration": 454,
      "data": {
        "error": "Internal Server Error",
        "message": "An unexpected error occurred"
      },
      "error": "Internal Server Error"
    },
    {
      "endpoint": "/api/bookings",
      "method": "POST",
      "status": "failed",
      "statusCode": 400,
      "duration": 3,
      "data": {
        "error": {
          "issues": [
            {
              "code": "too_small",
              "minimum": 1,
              "type": "string",
              "inclusive": true,
              "exact": false,
              "message": "String must contain at least 1 character(s)",
              "path": [
                "propertyId"
              ]
            },
            {
              "code": "invalid_type",
              "expected": "number",
              "received": "undefined",
              "path": [
                "adults"
              ],
              "message": "Required"
            },
            {
              "code": "invalid_type",
              "expected": "string",
              "received": "undefined",
              "path": [
                "guestFirstName"
              ],
              "message": "Required"
            },
            {
              "code": "invalid_type",
              "expected": "string",
              "received": "undefined",
              "path": [
                "guestLastName"
              ],
              "message": "Required"
            }
          ],
          "name": "ZodError"
        }
      },
      "error": {
        "issues": [
          {
            "code": "too_small",
            "minimum": 1,
            "type": "string",
            "inclusive": true,
            "exact": false,
            "message": "String must contain at least 1 character(s)",
            "path": [
              "propertyId"
            ]
          },
          {
            "code": "invalid_type",
            "expected": "number",
            "received": "undefined",
            "path": [
              "adults"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "guestFirstName"
            ],
            "message": "Required"
          },
          {
            "code": "invalid_type",
            "expected": "string",
            "received": "undefined",
            "path": [
              "guestLastName"
            ],
            "message": "Required"
          }
        ],
        "name": "ZodError"
      }
    },
    {
      "endpoint": "/api/pricing/calculate",
      "method": "POST",
      "status": "failed",
      "statusCode": 400,
      "duration": 371,
      "data": {
        "error": "Property not found"
      },
      "error": "Property not found"
    },
    {
      "endpoint": "/api/pricing/check-availability",
      "method": "POST",
      "status": "failed",
      "statusCode": 404,
      "duration": 2,
      "data": {
        "message": "Route POST:/api/pricing/check-availability not found",
        "error": "Not Found",
        "statusCode": 404
      },
      "error": "Not Found"
    },
    {
      "endpoint": "/api/availability/availability-calendar?propertyId=&startDate=2025-07-09T21:02:41.685Z&endDate=2025-10-09T21:02:41.685Z",
      "method": "GET",
      "status": "failed",
      "statusCode": 400,
      "duration": 2,
      "data": {
        "error": "Missing required parameters: propertyId, startDate, endDate"
      },
      "error": "Missing required parameters: propertyId, startDate, endDate"
    },
    {
      "endpoint": "/api/availability/check-availability",
      "method": "POST",
      "status": "failed",
      "statusCode": 400,
      "duration": 2,
      "data": {
        "error": {
          "formErrors": [],
          "fieldErrors": {
            "propertyId": [
              "String must contain at least 1 character(s)"
            ]
          }
        }
      },
      "error": {
        "formErrors": [],
        "fieldErrors": {
          "propertyId": [
            "String must contain at least 1 character(s)"
          ]
        }
      }
    },
    {
      "endpoint": "/api/availability/blocked-periods",
      "method": "POST",
      "status": "failed",
      "statusCode": 400,
      "duration": 2,
      "data": {
        "error": {
          "formErrors": [],
          "fieldErrors": {
            "propertyId": [
              "String must contain at least 1 character(s)"
            ]
          }
        }
      },
      "error": {
        "formErrors": [],
        "fieldErrors": {
          "propertyId": [
            "String must contain at least 1 character(s)"
          ]
        }
      }
    },
    {
      "endpoint": "/api/availability/ical/export-url/",
      "method": "GET",
      "status": "failed",
      "statusCode": 404,
      "duration": 370,
      "data": {
        "error": "Property not found"
      },
      "error": "Property not found"
    },
    {
      "endpoint": "/api/availability/ical/export/",
      "method": "GET",
      "status": "failed",
      "error": "socket hang up",
      "duration": 463
    },
    {
      "endpoint": "/api/analytics/overview",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 3
    },
    {
      "endpoint": "/api/analytics/revenue",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/api/analytics/occupancy",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/api/analytics/top-properties",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 0
    },
    {
      "endpoint": "/api/analytics/booking-sources",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/api/public/properties?tenantId=cmcwg3i8m0000u76997dfat8v",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/api/public/pricing/calculate",
      "method": "POST",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 0
    },
    {
      "endpoint": "/api/promo-codes",
      "method": "POST",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 0
    },
    {
      "endpoint": "/api/booking-options",
      "method": "POST",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/api/properties//booking-options",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    },
    {
      "endpoint": "/health",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 0
    },
    {
      "endpoint": "/health/ready",
      "method": "GET",
      "status": "failed",
      "error": "connect ECONNREFUSED 127.0.0.1:3001",
      "duration": 1
    }
  ],
  "categorized": {
    "Authentication": [
      {
        "endpoint": "/api/auth/register",
        "method": "POST",
        "status": "success",
        "statusCode": 201,
        "duration": 1650,
        "data": {
          "user": {
            "id": "cmcwg3j65000ju76luagm2wwi",
            "email": "Macey.Spinka-Ankunding@yahoo.com",
            "firstName": "Minnie",
            "lastName": "Satterfield",
            "role": "OWNER"
          },
          "tenant": {
            "id": "cmcwg3j1z000hu76lh2lamnfw",
            "name": "Minnie Satterfield",
            "subdomain": "nicolas-thiel"
          },
          "expiresIn": 900
        }
      },
      {
        "endpoint": "/api/auth/login",
        "method": "POST",
        "status": "success",
        "statusCode": 200,
        "duration": 1953,
        "data": {
          "user": {
            "id": "cmcwg3j65000ju76luagm2wwi",
            "email": "Macey.Spinka-Ankunding@yahoo.com",
            "firstName": "Minnie",
            "lastName": "Satterfield",
            "role": "OWNER"
          },
          "tenant": {
            "id": "cmcwg3j1z000hu76lh2lamnfw",
            "name": "Minnie Satterfield",
            "subdomain": "nicolas-thiel"
          },
          "expiresIn": 900
        }
      },
      {
        "endpoint": "/api/auth/me",
        "method": "GET",
        "status": "success",
        "statusCode": 200,
        "duration": 524,
        "data": {
          "id": "cmcwg3j65000ju76luagm2wwi",
          "email": "Macey.Spinka-Ankunding@yahoo.com",
          "firstName": "Minnie",
          "lastName": "Satterfield",
          "role": "OWNER",
          "tenant": {
            "id": "cmcwg3j1z000hu76lh2lamnfw",
            "name": "Minnie Satterfield",
            "subdomain": "nicolas-thiel",
            "customDomain": null
          }
        }
      },
      {
        "endpoint": "/api/auth/refresh",
        "method": "POST",
        "status": "failed",
        "statusCode": 401,
        "duration": 683,
        "data": {
          "error": "Invalid refresh token"
        },
        "error": "Invalid refresh token"
      },
      {
        "endpoint": "/api/auth/logout",
        "method": "POST",
        "status": "success",
        "statusCode": 200,
        "duration": 745,
        "data": {
          "message": "Logged out successfully"
        }
      },
      {
        "endpoint": "/api/auth/login",
        "method": "POST",
        "status": "success",
        "statusCode": 200,
        "duration": 1901,
        "data": {
          "user": {
            "id": "cmcwg3j65000ju76luagm2wwi",
            "email": "Macey.Spinka-Ankunding@yahoo.com",
            "firstName": "Minnie",
            "lastName": "Satterfield",
            "role": "OWNER"
          },
          "tenant": {
            "id": "cmcwg3j1z000hu76lh2lamnfw",
            "name": "Minnie Satterfield",
            "subdomain": "nicolas-thiel"
          },
          "expiresIn": 900
        }
      }
    ],
    "Properties": [
      {
        "endpoint": "/api/properties",
        "method": "POST",
        "status": "failed",
        "statusCode": 500,
        "duration": 454,
        "data": {
          "error": "Internal Server Error",
          "message": "An unexpected error occurred"
        },
        "error": "Internal Server Error"
      },
      {
        "endpoint": "/api/properties//booking-options",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      }
    ],
    "Bookings": [
      {
        "endpoint": "/api/bookings",
        "method": "POST",
        "status": "failed",
        "statusCode": 400,
        "duration": 3,
        "data": {
          "error": {
            "issues": [
              {
                "code": "too_small",
                "minimum": 1,
                "type": "string",
                "inclusive": true,
                "exact": false,
                "message": "String must contain at least 1 character(s)",
                "path": [
                  "propertyId"
                ]
              },
              {
                "code": "invalid_type",
                "expected": "number",
                "received": "undefined",
                "path": [
                  "adults"
                ],
                "message": "Required"
              },
              {
                "code": "invalid_type",
                "expected": "string",
                "received": "undefined",
                "path": [
                  "guestFirstName"
                ],
                "message": "Required"
              },
              {
                "code": "invalid_type",
                "expected": "string",
                "received": "undefined",
                "path": [
                  "guestLastName"
                ],
                "message": "Required"
              }
            ],
            "name": "ZodError"
          }
        },
        "error": {
          "issues": [
            {
              "code": "too_small",
              "minimum": 1,
              "type": "string",
              "inclusive": true,
              "exact": false,
              "message": "String must contain at least 1 character(s)",
              "path": [
                "propertyId"
              ]
            },
            {
              "code": "invalid_type",
              "expected": "number",
              "received": "undefined",
              "path": [
                "adults"
              ],
              "message": "Required"
            },
            {
              "code": "invalid_type",
              "expected": "string",
              "received": "undefined",
              "path": [
                "guestFirstName"
              ],
              "message": "Required"
            },
            {
              "code": "invalid_type",
              "expected": "string",
              "received": "undefined",
              "path": [
                "guestLastName"
              ],
              "message": "Required"
            }
          ],
          "name": "ZodError"
        }
      }
    ],
    "Pricing": [
      {
        "endpoint": "/api/pricing/calculate",
        "method": "POST",
        "status": "failed",
        "statusCode": 400,
        "duration": 371,
        "data": {
          "error": "Property not found"
        },
        "error": "Property not found"
      },
      {
        "endpoint": "/api/pricing/check-availability",
        "method": "POST",
        "status": "failed",
        "statusCode": 404,
        "duration": 2,
        "data": {
          "message": "Route POST:/api/pricing/check-availability not found",
          "error": "Not Found",
          "statusCode": 404
        },
        "error": "Not Found"
      }
    ],
    "Availability": [
      {
        "endpoint": "/api/availability/availability-calendar?propertyId=&startDate=2025-07-09T21:02:41.685Z&endDate=2025-10-09T21:02:41.685Z",
        "method": "GET",
        "status": "failed",
        "statusCode": 400,
        "duration": 2,
        "data": {
          "error": "Missing required parameters: propertyId, startDate, endDate"
        },
        "error": "Missing required parameters: propertyId, startDate, endDate"
      },
      {
        "endpoint": "/api/availability/check-availability",
        "method": "POST",
        "status": "failed",
        "statusCode": 400,
        "duration": 2,
        "data": {
          "error": {
            "formErrors": [],
            "fieldErrors": {
              "propertyId": [
                "String must contain at least 1 character(s)"
              ]
            }
          }
        },
        "error": {
          "formErrors": [],
          "fieldErrors": {
            "propertyId": [
              "String must contain at least 1 character(s)"
            ]
          }
        }
      },
      {
        "endpoint": "/api/availability/blocked-periods",
        "method": "POST",
        "status": "failed",
        "statusCode": 400,
        "duration": 2,
        "data": {
          "error": {
            "formErrors": [],
            "fieldErrors": {
              "propertyId": [
                "String must contain at least 1 character(s)"
              ]
            }
          }
        },
        "error": {
          "formErrors": [],
          "fieldErrors": {
            "propertyId": [
              "String must contain at least 1 character(s)"
            ]
          }
        }
      },
      {
        "endpoint": "/api/availability/ical/export-url/",
        "method": "GET",
        "status": "failed",
        "statusCode": 404,
        "duration": 370,
        "data": {
          "error": "Property not found"
        },
        "error": "Property not found"
      },
      {
        "endpoint": "/api/availability/ical/export/",
        "method": "GET",
        "status": "failed",
        "error": "socket hang up",
        "duration": 463
      }
    ],
    "Analytics": [
      {
        "endpoint": "/api/analytics/overview",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 3
      },
      {
        "endpoint": "/api/analytics/revenue",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      },
      {
        "endpoint": "/api/analytics/occupancy",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      },
      {
        "endpoint": "/api/analytics/top-properties",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 0
      },
      {
        "endpoint": "/api/analytics/booking-sources",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      }
    ],
    "Messaging": [],
    "Payments": [],
    "Public": [
      {
        "endpoint": "/api/public/properties?tenantId=cmcwg3i8m0000u76997dfat8v",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      },
      {
        "endpoint": "/api/public/pricing/calculate",
        "method": "POST",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 0
      }
    ],
    "PromoCode": [
      {
        "endpoint": "/api/promo-codes",
        "method": "POST",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 0
      }
    ],
    "BookingOptions": [
      {
        "endpoint": "/api/booking-options",
        "method": "POST",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      }
    ],
    "Health": [
      {
        "endpoint": "/health",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 0
      },
      {
        "endpoint": "/health/ready",
        "method": "GET",
        "status": "failed",
        "error": "connect ECONNREFUSED 127.0.0.1:3001",
        "duration": 1
      }
    ],
    "Other": []
  }
}