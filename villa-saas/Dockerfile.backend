# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy all package.json files to maintain the monorepo structure
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY packages/database/package*.json ./packages/database/
COPY packages/types/package*.json ./packages/types/
COPY packages/utils/package*.json ./packages/utils/
COPY packages/i18n/package*.json ./packages/i18n/

# Install all dependencies
RUN npm ci

# Copy all source files
COPY . .

# Generate Prisma client
WORKDIR /app/packages/database
RUN npx prisma generate

# Build backend
WORKDIR /app/apps/backend
RUN npm run build

# Production stage
FROM node:20-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY packages/database/package*.json ./packages/database/
COPY packages/types/package*.json ./packages/types/
COPY packages/utils/package*.json ./packages/utils/
COPY packages/i18n/package*.json ./packages/i18n/

# Install production dependencies only
RUN npm ci --omit=dev

# Copy built backend and necessary files
COPY --from=builder /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder /app/apps/backend/src/emails ./apps/backend/src/emails

# Copy packages
COPY --from=builder /app/packages ./packages

# Generate Prisma client in production
WORKDIR /app/packages/database
RUN npx prisma generate

# Set working directory to backend
WORKDIR /app/apps/backend

# Create uploads directory
RUN mkdir -p uploads/properties

# Environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0

# Expose port (Railway will set PORT env variable)
EXPOSE 3001

# Start the server
CMD ["node", "dist/server.js"]